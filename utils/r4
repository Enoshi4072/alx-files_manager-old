// utils/redis.js

// Import the required Redis module
import redis from 'redis';

// Create a class for managing Redis operations
class RedisClient {
  constructor() {
    // Create a new Redis client
    this.client = redis.createClient();
    this.isClientConnected = true;

    // Handle errors
    this.client.on('error', (error) => {
      console.error('Redis error:', error);
     this.isClientConnected = false;
    });
    this.client.on('connect', () => {
	    this.isClientConnected = true;
    });
  }

  // Check if the connection to Redis is alive
  isAlive() {
    return this.isClientConnected;
  }

  // Get the value stored in Redis for a given key
  async get(key) {
    return new Promise((resolve, reject) => {
      this.client.get(key, (error, value) => {
        if (error) {
          reject(error);
        } else {
          resolve(value);
        }
      });
    });
  }

  // Set a value in Redis with an expiration time (in seconds)
  async set(key, value, duration) {
    this.client.set(key, value, 'EX', duration);
  }

  // Delete a value from Redis for a given key
  async del(key) {
    this.client.del(key);
  }
}

// Create and export an instance of RedisClient
export const redisClient = new RedisClient();
export default redisClient;
